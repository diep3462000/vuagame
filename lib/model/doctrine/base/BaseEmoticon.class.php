<?php
// Connection Component Binding
Doctrine_Manager::getInstance()->bindComponent('Emoticon', 'doctrine');

/**
 * BaseEmoticon
 * 
 * This class has been auto-generated by the Doctrine ORM Framework
 * 
 * @property integer $id
 * @property string $emoticon
 * @property integer $status
 * @property string $type
 * 
 * @method integer  getId()       Returns the current record's "id" value
 * @method string   getEmoticon() Returns the current record's "emoticon" value
 * @method integer  getStatus()   Returns the current record's "status" value
 * @method string   getType()     Returns the current record's "type" value
 * @method Emoticon setId()       Sets the current record's "id" value
 * @method Emoticon setEmoticon() Sets the current record's "emoticon" value
 * @method Emoticon setStatus()   Sets the current record's "status" value
 * @method Emoticon setType()     Sets the current record's "type" value
 * 
 * @package    Vt_Portals
 * @subpackage model
 * @author     ngoctv1
 * @version    SVN: $Id: Builder.php 7490 2010-03-29 19:53:27Z jwage $
 */
abstract class BaseEmoticon extends sfDoctrineRecord
{
    public function setTableDefinition()
    {
        $this->setTableName('emoticon');
        $this->hasColumn('id', 'integer', 4, array(
             'type' => 'integer',
             'fixed' => 0,
             'unsigned' => false,
             'primary' => true,
             'autoincrement' => true,
             'length' => 4,
             ));
        $this->hasColumn('emoticon', 'string', 150, array(
             'type' => 'string',
             'fixed' => 0,
             'unsigned' => false,
             'primary' => false,
             'notnull' => false,
             'autoincrement' => false,
             'length' => 150,
             ));
        $this->hasColumn('status', 'integer', 1, array(
             'type' => 'integer',
             'fixed' => 0,
             'unsigned' => false,
             'primary' => false,
             'default' => '1',
             'notnull' => false,
             'autoincrement' => false,
             'length' => 1,
             ));
        $this->hasColumn('type', 'string', 45, array(
             'type' => 'string',
             'fixed' => 0,
             'unsigned' => false,
             'primary' => false,
             'notnull' => false,
             'autoincrement' => false,
             'length' => 45,
             ));
    }

    public function setUp()
    {
        parent::setUp();
        
    }
}
<?php
// Connection Component Binding
Doctrine_Manager::getInstance()->bindComponent('APaycard', 'doctrine');

/**
 * BaseAPaycard
 * 
 * This class has been auto-generated by the Doctrine ORM Framework
 * 
 * @property integer $id
 * @property string $cardnumber
 * @property string $cardserial
 * @property string $username
 * @property string $cardprovider
 * @property string $cp
 * @property integer $channel
 * @property string $refno
 * @property integer $cardprice
 * @property integer $gameprice
 * @property integer $status
 * @property string $resmsg
 * @property timestamp $datecreated
 * 
 * @method integer   getId()           Returns the current record's "id" value
 * @method string    getCardnumber()   Returns the current record's "cardnumber" value
 * @method string    getCardserial()   Returns the current record's "cardserial" value
 * @method string    getUsername()     Returns the current record's "username" value
 * @method string    getCardprovider() Returns the current record's "cardprovider" value
 * @method string    getCp()           Returns the current record's "cp" value
 * @method integer   getChannel()      Returns the current record's "channel" value
 * @method string    getRefno()        Returns the current record's "refno" value
 * @method integer   getCardprice()    Returns the current record's "cardprice" value
 * @method integer   getGameprice()    Returns the current record's "gameprice" value
 * @method integer   getStatus()       Returns the current record's "status" value
 * @method string    getResmsg()       Returns the current record's "resmsg" value
 * @method timestamp getDatecreated()  Returns the current record's "datecreated" value
 * @method APaycard  setId()           Sets the current record's "id" value
 * @method APaycard  setCardnumber()   Sets the current record's "cardnumber" value
 * @method APaycard  setCardserial()   Sets the current record's "cardserial" value
 * @method APaycard  setUsername()     Sets the current record's "username" value
 * @method APaycard  setCardprovider() Sets the current record's "cardprovider" value
 * @method APaycard  setCp()           Sets the current record's "cp" value
 * @method APaycard  setChannel()      Sets the current record's "channel" value
 * @method APaycard  setRefno()        Sets the current record's "refno" value
 * @method APaycard  setCardprice()    Sets the current record's "cardprice" value
 * @method APaycard  setGameprice()    Sets the current record's "gameprice" value
 * @method APaycard  setStatus()       Sets the current record's "status" value
 * @method APaycard  setResmsg()       Sets the current record's "resmsg" value
 * @method APaycard  setDatecreated()  Sets the current record's "datecreated" value
 * 
 * @package    Vt_Portals
 * @subpackage model
 * @author     ngoctv1
 * @version    SVN: $Id: Builder.php 7490 2010-03-29 19:53:27Z jwage $
 */
abstract class BaseAPaycard extends sfDoctrineRecord
{
    public function setTableDefinition()
    {
        $this->setTableName('a_paycard');
        $this->hasColumn('id', 'integer', 4, array(
             'type' => 'integer',
             'fixed' => 0,
             'unsigned' => false,
             'primary' => true,
             'autoincrement' => true,
             'length' => 4,
             ));
        $this->hasColumn('cardnumber', 'string', 50, array(
             'type' => 'string',
             'fixed' => 0,
             'unsigned' => false,
             'primary' => false,
             'notnull' => true,
             'autoincrement' => false,
             'length' => 50,
             ));
        $this->hasColumn('cardserial', 'string', 50, array(
             'type' => 'string',
             'fixed' => 0,
             'unsigned' => false,
             'primary' => false,
             'notnull' => true,
             'autoincrement' => false,
             'length' => 50,
             ));
        $this->hasColumn('username', 'string', 50, array(
             'type' => 'string',
             'fixed' => 0,
             'unsigned' => false,
             'primary' => false,
             'notnull' => true,
             'autoincrement' => false,
             'length' => 50,
             ));
        $this->hasColumn('cardprovider', 'string', 10, array(
             'type' => 'string',
             'fixed' => 0,
             'unsigned' => false,
             'primary' => false,
             'notnull' => true,
             'autoincrement' => false,
             'length' => 10,
             ));
        $this->hasColumn('cp', 'string', 10, array(
             'type' => 'string',
             'fixed' => 0,
             'unsigned' => false,
             'primary' => false,
             'notnull' => false,
             'autoincrement' => false,
             'length' => 10,
             ));
        $this->hasColumn('channel', 'integer', 4, array(
             'type' => 'integer',
             'fixed' => 0,
             'unsigned' => false,
             'primary' => false,
             'default' => '3',
             'notnull' => false,
             'autoincrement' => false,
             'length' => 4,
             ));
        $this->hasColumn('refno', 'string', 50, array(
             'type' => 'string',
             'fixed' => 0,
             'unsigned' => false,
             'primary' => false,
             'notnull' => false,
             'autoincrement' => false,
             'length' => 50,
             ));
        $this->hasColumn('cardprice', 'integer', 8, array(
             'type' => 'integer',
             'fixed' => 0,
             'unsigned' => false,
             'primary' => false,
             'notnull' => true,
             'autoincrement' => false,
             'length' => 8,
             ));
        $this->hasColumn('gameprice', 'integer', 8, array(
             'type' => 'integer',
             'fixed' => 0,
             'unsigned' => false,
             'primary' => false,
             'notnull' => true,
             'autoincrement' => false,
             'length' => 8,
             ));
        $this->hasColumn('status', 'integer', 4, array(
             'type' => 'integer',
             'fixed' => 0,
             'unsigned' => false,
             'primary' => false,
             'default' => '1',
             'notnull' => true,
             'autoincrement' => false,
             'length' => 4,
             ));
        $this->hasColumn('resmsg', 'string', 100, array(
             'type' => 'string',
             'fixed' => 0,
             'unsigned' => false,
             'primary' => false,
             'notnull' => false,
             'autoincrement' => false,
             'length' => 100,
             ));
        $this->hasColumn('datecreated', 'timestamp', 25, array(
             'type' => 'timestamp',
             'fixed' => 0,
             'unsigned' => false,
             'primary' => false,
             'notnull' => true,
             'autoincrement' => false,
             'length' => 25,
             ));
    }

    public function setUp()
    {
        parent::setUp();
        
    }
}
<?php
// Connection Component Binding
Doctrine_Manager::getInstance()->bindComponent('HistoryFilter', 'doctrine');

/**
 * BaseHistoryFilter
 * 
 * This class has been auto-generated by the Doctrine ORM Framework
 * 
 * @property integer $id
 * @property string $textview
 * @property string $_sql
 * @property string $role
 * @property integer $_order
 * 
 * @method integer       getId()       Returns the current record's "id" value
 * @method string        getTextview() Returns the current record's "textview" value
 * @method string        get_sql()     Returns the current record's "_sql" value
 * @method string        getRole()     Returns the current record's "role" value
 * @method integer       get_order()   Returns the current record's "_order" value
 * @method HistoryFilter setId()       Sets the current record's "id" value
 * @method HistoryFilter setTextview() Sets the current record's "textview" value
 * @method HistoryFilter set_sql()     Sets the current record's "_sql" value
 * @method HistoryFilter setRole()     Sets the current record's "role" value
 * @method HistoryFilter set_order()   Sets the current record's "_order" value
 * 
 * @package    Vt_Portals
 * @subpackage model
 * @author     ngoctv1
 * @version    SVN: $Id: Builder.php 7490 2010-03-29 19:53:27Z jwage $
 */
abstract class BaseHistoryFilter extends sfDoctrineRecord
{
    public function setTableDefinition()
    {
        $this->setTableName('history_filter');
        $this->hasColumn('id', 'integer', 4, array(
             'type' => 'integer',
             'fixed' => 0,
             'unsigned' => false,
             'primary' => true,
             'autoincrement' => true,
             'length' => 4,
             ));
        $this->hasColumn('textview', 'string', 5000, array(
             'type' => 'string',
             'fixed' => 0,
             'unsigned' => false,
             'primary' => false,
             'notnull' => true,
             'autoincrement' => false,
             'length' => 5000,
             ));
        $this->hasColumn('_sql', 'string', 5000, array(
             'type' => 'string',
             'fixed' => 0,
             'unsigned' => false,
             'primary' => false,
             'notnull' => false,
             'autoincrement' => false,
             'length' => 5000,
             ));
        $this->hasColumn('role', 'string', 5000, array(
             'type' => 'string',
             'fixed' => 0,
             'unsigned' => false,
             'primary' => false,
             'notnull' => false,
             'autoincrement' => false,
             'length' => 5000,
             ));
        $this->hasColumn('_order', 'integer', 4, array(
             'type' => 'integer',
             'fixed' => 0,
             'unsigned' => false,
             'primary' => false,
             'notnull' => false,
             'autoincrement' => false,
             'length' => 4,
             ));
    }

    public function setUp()
    {
        parent::setUp();
        
    }
}
<?php
// Connection Component Binding
Doctrine_Manager::getInstance()->bindComponent('ActiveEmail', 'doctrine');

/**
 * BaseActiveEmail
 * 
 * This class has been auto-generated by the Doctrine ORM Framework
 * 
 * @property integer $id
 * @property string $email
 * @property integer $user_id
 * @property string $activecode
 * @property timestamp $createddate
 * @property timestamp $expireddate
 * 
 * @method integer     getId()          Returns the current record's "id" value
 * @method string      getEmail()       Returns the current record's "email" value
 * @method integer     getUserId()      Returns the current record's "user_id" value
 * @method string      getActivecode()  Returns the current record's "activecode" value
 * @method timestamp   getCreateddate() Returns the current record's "createddate" value
 * @method timestamp   getExpireddate() Returns the current record's "expireddate" value
 * @method ActiveEmail setId()          Sets the current record's "id" value
 * @method ActiveEmail setEmail()       Sets the current record's "email" value
 * @method ActiveEmail setUserId()      Sets the current record's "user_id" value
 * @method ActiveEmail setActivecode()  Sets the current record's "activecode" value
 * @method ActiveEmail setCreateddate() Sets the current record's "createddate" value
 * @method ActiveEmail setExpireddate() Sets the current record's "expireddate" value
 * 
 * @package    Vt_Portals
 * @subpackage model
 * @author     ngoctv1
 * @version    SVN: $Id: Builder.php 7490 2010-03-29 19:53:27Z jwage $
 */
abstract class BaseActiveEmail extends sfDoctrineRecord
{
    public function setTableDefinition()
    {
        $this->setTableName('active_email');
        $this->hasColumn('id', 'integer', 4, array(
             'type' => 'integer',
             'fixed' => 0,
             'unsigned' => false,
             'primary' => true,
             'autoincrement' => true,
             'length' => 4,
             ));
        $this->hasColumn('email', 'string', 255, array(
             'type' => 'string',
             'fixed' => 0,
             'unsigned' => false,
             'primary' => false,
             'notnull' => false,
             'autoincrement' => false,
             'length' => 255,
             ));
        $this->hasColumn('user_id', 'integer', 4, array(
             'type' => 'integer',
             'fixed' => 0,
             'unsigned' => false,
             'primary' => false,
             'notnull' => false,
             'autoincrement' => false,
             'length' => 4,
             ));
        $this->hasColumn('activecode', 'string', 255, array(
             'type' => 'string',
             'fixed' => 0,
             'unsigned' => false,
             'primary' => false,
             'notnull' => false,
             'autoincrement' => false,
             'length' => 255,
             ));
        $this->hasColumn('createddate', 'timestamp', 25, array(
             'type' => 'timestamp',
             'fixed' => 0,
             'unsigned' => false,
             'primary' => false,
             'notnull' => false,
             'autoincrement' => false,
             'length' => 25,
             ));
        $this->hasColumn('expireddate', 'timestamp', 25, array(
             'type' => 'timestamp',
             'fixed' => 0,
             'unsigned' => false,
             'primary' => false,
             'notnull' => false,
             'autoincrement' => false,
             'length' => 25,
             ));
    }

    public function setUp()
    {
        parent::setUp();
        
    }
}
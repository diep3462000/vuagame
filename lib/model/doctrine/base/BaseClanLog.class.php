<?php
// Connection Component Binding
Doctrine_Manager::getInstance()->bindComponent('ClanLog', 'doctrine');

/**
 * BaseClanLog
 * 
 * This class has been auto-generated by the Doctrine ORM Framework
 * 
 * @property integer $id
 * @property string $name
 * @property integer $level
 * @property integer $money
 * @property integer $ownerid
 * @property integer $totalmember
 * @property timestamp $deletedate
 * 
 * @method integer   getId()          Returns the current record's "id" value
 * @method string    getName()        Returns the current record's "name" value
 * @method integer   getLevel()       Returns the current record's "level" value
 * @method integer   getMoney()       Returns the current record's "money" value
 * @method integer   getOwnerid()     Returns the current record's "ownerid" value
 * @method integer   getTotalmember() Returns the current record's "totalmember" value
 * @method timestamp getDeletedate()  Returns the current record's "deletedate" value
 * @method ClanLog   setId()          Sets the current record's "id" value
 * @method ClanLog   setName()        Sets the current record's "name" value
 * @method ClanLog   setLevel()       Sets the current record's "level" value
 * @method ClanLog   setMoney()       Sets the current record's "money" value
 * @method ClanLog   setOwnerid()     Sets the current record's "ownerid" value
 * @method ClanLog   setTotalmember() Sets the current record's "totalmember" value
 * @method ClanLog   setDeletedate()  Sets the current record's "deletedate" value
 * 
 * @package    Vt_Portals
 * @subpackage model
 * @author     ngoctv1
 * @version    SVN: $Id: Builder.php 7490 2010-03-29 19:53:27Z jwage $
 */
abstract class BaseClanLog extends sfDoctrineRecord
{
    public function setTableDefinition()
    {
        $this->setTableName('clan_log');
        $this->hasColumn('id', 'integer', 4, array(
             'type' => 'integer',
             'fixed' => 0,
             'unsigned' => false,
             'primary' => true,
             'autoincrement' => false,
             'length' => 4,
             ));
        $this->hasColumn('name', 'string', 100, array(
             'type' => 'string',
             'fixed' => 0,
             'unsigned' => false,
             'primary' => false,
             'notnull' => false,
             'autoincrement' => false,
             'length' => 100,
             ));
        $this->hasColumn('level', 'integer', 4, array(
             'type' => 'integer',
             'fixed' => 0,
             'unsigned' => false,
             'primary' => false,
             'notnull' => false,
             'autoincrement' => false,
             'length' => 4,
             ));
        $this->hasColumn('money', 'integer', 4, array(
             'type' => 'integer',
             'fixed' => 0,
             'unsigned' => false,
             'primary' => false,
             'notnull' => false,
             'autoincrement' => false,
             'length' => 4,
             ));
        $this->hasColumn('ownerid', 'integer', 4, array(
             'type' => 'integer',
             'fixed' => 0,
             'unsigned' => false,
             'primary' => false,
             'notnull' => false,
             'autoincrement' => false,
             'length' => 4,
             ));
        $this->hasColumn('totalmember', 'integer', 4, array(
             'type' => 'integer',
             'fixed' => 0,
             'unsigned' => false,
             'primary' => false,
             'notnull' => false,
             'autoincrement' => false,
             'length' => 4,
             ));
        $this->hasColumn('deletedate', 'timestamp', 25, array(
             'type' => 'timestamp',
             'fixed' => 0,
             'unsigned' => false,
             'primary' => false,
             'notnull' => true,
             'autoincrement' => false,
             'length' => 25,
             ));
    }

    public function setUp()
    {
        parent::setUp();
        
    }
}
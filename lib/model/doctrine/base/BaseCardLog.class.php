<?php
// Connection Component Binding
Doctrine_Manager::getInstance()->bindComponent('CardLog', 'doctrine');

/**
 * BaseCardLog
 * 
 * This class has been auto-generated by the Doctrine ORM Framework
 * 
 * @property integer $id
 * @property integer $user_id
 * @property string $code
 * @property timestamp $time
 * @property string $status
 * @property integer $success
 * 
 * @method integer   getId()      Returns the current record's "id" value
 * @method integer   getUserId()  Returns the current record's "user_id" value
 * @method string    getCode()    Returns the current record's "code" value
 * @method timestamp getTime()    Returns the current record's "time" value
 * @method string    getStatus()  Returns the current record's "status" value
 * @method integer   getSuccess() Returns the current record's "success" value
 * @method CardLog   setId()      Sets the current record's "id" value
 * @method CardLog   setUserId()  Sets the current record's "user_id" value
 * @method CardLog   setCode()    Sets the current record's "code" value
 * @method CardLog   setTime()    Sets the current record's "time" value
 * @method CardLog   setStatus()  Sets the current record's "status" value
 * @method CardLog   setSuccess() Sets the current record's "success" value
 * 
 * @package    Vt_Portals
 * @subpackage model
 * @author     ngoctv1
 * @version    SVN: $Id: Builder.php 7490 2010-03-29 19:53:27Z jwage $
 */
abstract class BaseCardLog extends sfDoctrineRecord
{
    public function setTableDefinition()
    {
        $this->setTableName('card_log');
        $this->hasColumn('id', 'integer', 4, array(
             'type' => 'integer',
             'fixed' => 0,
             'unsigned' => false,
             'primary' => true,
             'autoincrement' => true,
             'length' => 4,
             ));
        $this->hasColumn('user_id', 'integer', 4, array(
             'type' => 'integer',
             'fixed' => 0,
             'unsigned' => false,
             'primary' => false,
             'notnull' => false,
             'autoincrement' => false,
             'length' => 4,
             ));
        $this->hasColumn('code', 'string', 200, array(
             'type' => 'string',
             'fixed' => 0,
             'unsigned' => false,
             'primary' => false,
             'notnull' => false,
             'autoincrement' => false,
             'length' => 200,
             ));
        $this->hasColumn('time', 'timestamp', 25, array(
             'type' => 'timestamp',
             'fixed' => 0,
             'unsigned' => false,
             'primary' => false,
             'notnull' => true,
             'autoincrement' => false,
             'length' => 25,
             ));
        $this->hasColumn('status', 'string', 300, array(
             'type' => 'string',
             'fixed' => 0,
             'unsigned' => false,
             'primary' => false,
             'notnull' => false,
             'autoincrement' => false,
             'length' => 300,
             ));
        $this->hasColumn('success', 'integer', 4, array(
             'type' => 'integer',
             'fixed' => 0,
             'unsigned' => false,
             'primary' => false,
             'notnull' => false,
             'autoincrement' => false,
             'length' => 4,
             ));
    }

    public function setUp()
    {
        parent::setUp();
        
    }
}
<?php
// Connection Component Binding
Doctrine_Manager::getInstance()->bindComponent('VtpHtml', 'doctrine');

/**
 * BaseVtpHtml
 * 
 * This class has been auto-generated by the Doctrine ORM Framework
 * 
 * @property integer $id
 * @property string $name
 * @property string $content
 * @property integer $module_id
 * @property integer $portal_id
 * @property integer $is_active
 * @property integer $is_delete
 * @property integer $delete_by
 * @property timestamp $delete_at
 * @property string $lang
 * @property string $slug
 * @property string $prefix_path
 * @property integer $created_by
 * @property integer $updated_by
 * @property timestamp $created_at
 * @property timestamp $updated_at
 * @property SfGuardUser $SfGuardUser
 * @property SfGuardUser $SfGuardUser_2
 * 
 * @method integer     getId()            Returns the current record's "id" value
 * @method string      getName()          Returns the current record's "name" value
 * @method string      getContent()       Returns the current record's "content" value
 * @method integer     getModuleId()      Returns the current record's "module_id" value
 * @method integer     getPortalId()      Returns the current record's "portal_id" value
 * @method integer     getIsActive()      Returns the current record's "is_active" value
 * @method integer     getIsDelete()      Returns the current record's "is_delete" value
 * @method integer     getDeleteBy()      Returns the current record's "delete_by" value
 * @method timestamp   getDeleteAt()      Returns the current record's "delete_at" value
 * @method string      getLang()          Returns the current record's "lang" value
 * @method string      getSlug()          Returns the current record's "slug" value
 * @method string      getPrefixPath()    Returns the current record's "prefix_path" value
 * @method integer     getCreatedBy()     Returns the current record's "created_by" value
 * @method integer     getUpdatedBy()     Returns the current record's "updated_by" value
 * @method timestamp   getCreatedAt()     Returns the current record's "created_at" value
 * @method timestamp   getUpdatedAt()     Returns the current record's "updated_at" value
 * @method SfGuardUser getSfGuardUser()   Returns the current record's "SfGuardUser" value
 * @method SfGuardUser getSfGuardUser2()  Returns the current record's "SfGuardUser_2" value
 * @method VtpHtml     setId()            Sets the current record's "id" value
 * @method VtpHtml     setName()          Sets the current record's "name" value
 * @method VtpHtml     setContent()       Sets the current record's "content" value
 * @method VtpHtml     setModuleId()      Sets the current record's "module_id" value
 * @method VtpHtml     setPortalId()      Sets the current record's "portal_id" value
 * @method VtpHtml     setIsActive()      Sets the current record's "is_active" value
 * @method VtpHtml     setIsDelete()      Sets the current record's "is_delete" value
 * @method VtpHtml     setDeleteBy()      Sets the current record's "delete_by" value
 * @method VtpHtml     setDeleteAt()      Sets the current record's "delete_at" value
 * @method VtpHtml     setLang()          Sets the current record's "lang" value
 * @method VtpHtml     setSlug()          Sets the current record's "slug" value
 * @method VtpHtml     setPrefixPath()    Sets the current record's "prefix_path" value
 * @method VtpHtml     setCreatedBy()     Sets the current record's "created_by" value
 * @method VtpHtml     setUpdatedBy()     Sets the current record's "updated_by" value
 * @method VtpHtml     setCreatedAt()     Sets the current record's "created_at" value
 * @method VtpHtml     setUpdatedAt()     Sets the current record's "updated_at" value
 * @method VtpHtml     setSfGuardUser()   Sets the current record's "SfGuardUser" value
 * @method VtpHtml     setSfGuardUser2()  Sets the current record's "SfGuardUser_2" value
 * 
 * @package    Vt_Portals
 * @subpackage model
 * @author     ngoctv1
 * @version    SVN: $Id: Builder.php 7490 2010-03-29 19:53:27Z jwage $
 */
abstract class BaseVtpHtml extends sfDoctrineRecord
{
    public function setTableDefinition()
    {
        $this->setTableName('vtp_html');
        $this->hasColumn('id', 'integer', 8, array(
             'type' => 'integer',
             'fixed' => 0,
             'unsigned' => false,
             'primary' => true,
             'autoincrement' => true,
             'length' => 8,
             ));
        $this->hasColumn('name', 'string', 255, array(
             'type' => 'string',
             'fixed' => 0,
             'unsigned' => false,
             'primary' => false,
             'notnull' => true,
             'autoincrement' => false,
             'length' => 255,
             ));
        $this->hasColumn('content', 'string', null, array(
             'type' => 'string',
             'fixed' => 0,
             'unsigned' => false,
             'primary' => false,
             'notnull' => false,
             'autoincrement' => false,
             'length' => '',
             ));
        $this->hasColumn('module_id', 'integer', 8, array(
             'type' => 'integer',
             'fixed' => 0,
             'unsigned' => false,
             'primary' => false,
             'notnull' => false,
             'autoincrement' => false,
             'length' => 8,
             ));
        $this->hasColumn('portal_id', 'integer', 8, array(
             'type' => 'integer',
             'fixed' => 0,
             'unsigned' => false,
             'primary' => false,
             'default' => '0',
             'notnull' => false,
             'autoincrement' => false,
             'length' => 8,
             ));
        $this->hasColumn('is_active', 'integer', 1, array(
             'type' => 'integer',
             'fixed' => 0,
             'unsigned' => false,
             'primary' => false,
             'default' => '0',
             'notnull' => true,
             'autoincrement' => false,
             'length' => 1,
             ));
        $this->hasColumn('is_delete', 'integer', 1, array(
             'type' => 'integer',
             'fixed' => 0,
             'unsigned' => false,
             'primary' => false,
             'default' => '0',
             'notnull' => true,
             'autoincrement' => false,
             'length' => 1,
             ));
        $this->hasColumn('delete_by', 'integer', 8, array(
             'type' => 'integer',
             'fixed' => 0,
             'unsigned' => false,
             'primary' => false,
             'notnull' => false,
             'autoincrement' => false,
             'length' => 8,
             ));
        $this->hasColumn('delete_at', 'timestamp', 25, array(
             'type' => 'timestamp',
             'fixed' => 0,
             'unsigned' => false,
             'primary' => false,
             'notnull' => false,
             'autoincrement' => false,
             'length' => 25,
             ));
        $this->hasColumn('lang', 'string', 10, array(
             'type' => 'string',
             'fixed' => 0,
             'unsigned' => false,
             'primary' => false,
             'notnull' => true,
             'autoincrement' => false,
             'length' => 10,
             ));
        $this->hasColumn('slug', 'string', 255, array(
             'type' => 'string',
             'fixed' => 0,
             'unsigned' => false,
             'primary' => false,
             'notnull' => true,
             'autoincrement' => false,
             'length' => 255,
             ));
        $this->hasColumn('prefix_path', 'string', 255, array(
             'type' => 'string',
             'fixed' => 0,
             'unsigned' => false,
             'primary' => false,
             'notnull' => true,
             'autoincrement' => false,
             'length' => 255,
             ));
        $this->hasColumn('created_by', 'integer', 8, array(
             'type' => 'integer',
             'fixed' => 0,
             'unsigned' => false,
             'primary' => false,
             'notnull' => false,
             'autoincrement' => false,
             'length' => 8,
             ));
        $this->hasColumn('updated_by', 'integer', 8, array(
             'type' => 'integer',
             'fixed' => 0,
             'unsigned' => false,
             'primary' => false,
             'notnull' => false,
             'autoincrement' => false,
             'length' => 8,
             ));
        $this->hasColumn('created_at', 'timestamp', 25, array(
             'type' => 'timestamp',
             'fixed' => 0,
             'unsigned' => false,
             'primary' => false,
             'notnull' => true,
             'autoincrement' => false,
             'length' => 25,
             ));
        $this->hasColumn('updated_at', 'timestamp', 25, array(
             'type' => 'timestamp',
             'fixed' => 0,
             'unsigned' => false,
             'primary' => false,
             'notnull' => true,
             'autoincrement' => false,
             'length' => 25,
             ));
    }

    public function setUp()
    {
        parent::setUp();
        $this->hasOne('SfGuardUser', array(
             'local' => 'created_by',
             'foreign' => 'id'));

        $this->hasOne('SfGuardUser as SfGuardUser_2', array(
             'local' => 'updated_by',
             'foreign' => 'id'));
    }
}
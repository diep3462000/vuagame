<?php
// Connection Component Binding
Doctrine_Manager::getInstance()->bindComponent('Cp', 'doctrine');

/**
 * BaseCp
 * 
 * This class has been auto-generated by the Doctrine ORM Framework
 * 
 * @property integer $cp_id
 * @property string $cp_name
 * @property string $vm_name
 * @property integer $shortcode_sms1
 * @property integer $shortcode_sms2
 * @property integer $shortcode_active_sms
 * @property string $keyword
 * @property string $keyword_active
 * @property integer $enable_sms
 * @property integer $enable_active_sms
 * @property string $password_charging
 * @property integer $enable_ios_chaging
 * @property string $link_android
 * @property string $link_ios
 * 
 * @method integer getCpId()                 Returns the current record's "cp_id" value
 * @method string  getCpName()               Returns the current record's "cp_name" value
 * @method string  getVmName()               Returns the current record's "vm_name" value
 * @method integer getShortcodeSms1()        Returns the current record's "shortcode_sms1" value
 * @method integer getShortcodeSms2()        Returns the current record's "shortcode_sms2" value
 * @method integer getShortcodeActiveSms()   Returns the current record's "shortcode_active_sms" value
 * @method string  getKeyword()              Returns the current record's "keyword" value
 * @method string  getKeywordActive()        Returns the current record's "keyword_active" value
 * @method integer getEnableSms()            Returns the current record's "enable_sms" value
 * @method integer getEnableActiveSms()      Returns the current record's "enable_active_sms" value
 * @method string  getPasswordCharging()     Returns the current record's "password_charging" value
 * @method integer getEnableIosChaging()     Returns the current record's "enable_ios_chaging" value
 * @method string  getLinkAndroid()          Returns the current record's "link_android" value
 * @method string  getLinkIos()              Returns the current record's "link_ios" value
 * @method Cp      setCpId()                 Sets the current record's "cp_id" value
 * @method Cp      setCpName()               Sets the current record's "cp_name" value
 * @method Cp      setVmName()               Sets the current record's "vm_name" value
 * @method Cp      setShortcodeSms1()        Sets the current record's "shortcode_sms1" value
 * @method Cp      setShortcodeSms2()        Sets the current record's "shortcode_sms2" value
 * @method Cp      setShortcodeActiveSms()   Sets the current record's "shortcode_active_sms" value
 * @method Cp      setKeyword()              Sets the current record's "keyword" value
 * @method Cp      setKeywordActive()        Sets the current record's "keyword_active" value
 * @method Cp      setEnableSms()            Sets the current record's "enable_sms" value
 * @method Cp      setEnableActiveSms()      Sets the current record's "enable_active_sms" value
 * @method Cp      setPasswordCharging()     Sets the current record's "password_charging" value
 * @method Cp      setEnableIosChaging()     Sets the current record's "enable_ios_chaging" value
 * @method Cp      setLinkAndroid()          Sets the current record's "link_android" value
 * @method Cp      setLinkIos()              Sets the current record's "link_ios" value
 * 
 * @package    Vt_Portals
 * @subpackage model
 * @author     ngoctv1
 * @version    SVN: $Id: Builder.php 7490 2010-03-29 19:53:27Z jwage $
 */
abstract class BaseCp extends sfDoctrineRecord
{
    public function setTableDefinition()
    {
        $this->setTableName('cp');
        $this->hasColumn('cp_id', 'integer', 4, array(
             'type' => 'integer',
             'fixed' => 0,
             'unsigned' => false,
             'primary' => true,
             'autoincrement' => true,
             'length' => 4,
             ));
        $this->hasColumn('cp_name', 'string', 20, array(
             'type' => 'string',
             'fixed' => 0,
             'unsigned' => false,
             'primary' => false,
             'notnull' => false,
             'autoincrement' => false,
             'length' => 20,
             ));
        $this->hasColumn('vm_name', 'string', 5, array(
             'type' => 'string',
             'fixed' => 0,
             'unsigned' => false,
             'primary' => false,
             'default' => 'Mi',
             'notnull' => true,
             'autoincrement' => false,
             'length' => 5,
             ));
        $this->hasColumn('shortcode_sms1', 'integer', 4, array(
             'type' => 'integer',
             'fixed' => 0,
             'unsigned' => false,
             'primary' => false,
             'notnull' => false,
             'autoincrement' => false,
             'length' => 4,
             ));
        $this->hasColumn('shortcode_sms2', 'integer', 4, array(
             'type' => 'integer',
             'fixed' => 0,
             'unsigned' => false,
             'primary' => false,
             'notnull' => false,
             'autoincrement' => false,
             'length' => 4,
             ));
        $this->hasColumn('shortcode_active_sms', 'integer', 4, array(
             'type' => 'integer',
             'fixed' => 0,
             'unsigned' => false,
             'primary' => false,
             'notnull' => false,
             'autoincrement' => false,
             'length' => 4,
             ));
        $this->hasColumn('keyword', 'string', 10, array(
             'type' => 'string',
             'fixed' => 0,
             'unsigned' => false,
             'primary' => false,
             'notnull' => false,
             'autoincrement' => false,
             'length' => 10,
             ));
        $this->hasColumn('keyword_active', 'string', 10, array(
             'type' => 'string',
             'fixed' => 0,
             'unsigned' => false,
             'primary' => false,
             'notnull' => false,
             'autoincrement' => false,
             'length' => 10,
             ));
        $this->hasColumn('enable_sms', 'integer', 4, array(
             'type' => 'integer',
             'fixed' => 0,
             'unsigned' => false,
             'primary' => false,
             'notnull' => false,
             'autoincrement' => false,
             'length' => 4,
             ));
        $this->hasColumn('enable_active_sms', 'integer', 4, array(
             'type' => 'integer',
             'fixed' => 0,
             'unsigned' => false,
             'primary' => false,
             'notnull' => false,
             'autoincrement' => false,
             'length' => 4,
             ));
        $this->hasColumn('password_charging', 'string', 10, array(
             'type' => 'string',
             'fixed' => 0,
             'unsigned' => false,
             'primary' => false,
             'notnull' => false,
             'autoincrement' => false,
             'length' => 10,
             ));
        $this->hasColumn('enable_ios_chaging', 'integer', 4, array(
             'type' => 'integer',
             'fixed' => 0,
             'unsigned' => false,
             'primary' => false,
             'notnull' => false,
             'autoincrement' => false,
             'length' => 4,
             ));
        $this->hasColumn('link_android', 'string', 100, array(
             'type' => 'string',
             'fixed' => 0,
             'unsigned' => false,
             'primary' => false,
             'notnull' => false,
             'autoincrement' => false,
             'length' => 100,
             ));
        $this->hasColumn('link_ios', 'string', 100, array(
             'type' => 'string',
             'fixed' => 0,
             'unsigned' => false,
             'primary' => false,
             'notnull' => false,
             'autoincrement' => false,
             'length' => 100,
             ));
    }

    public function setUp()
    {
        parent::setUp();
        
    }
}